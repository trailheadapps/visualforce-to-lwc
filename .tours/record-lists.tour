{
    "title": "4- Record Lists Examples",
    "steps": [
        {
            "title": "Using a lightning-datatable",
            "file": "force-app/main/default/lwc/listWithParentRecordData/listWithParentRecordData.html",
            "line": 4,
            "description": "The \"List with Parent Record Data\" example shows how to use a [lightning-datatable](https://developer.salesforce.com/docs/component-library/bundle/lightning-datatable/example) to show a list of accounts, including a column that shows a field from a related parent object, its owner. We start by including lightning-datatable in the markup."
        },
        {
            "title": "Retrieving records with Apex",
            "file": "force-app/main/default/classes/ListWithParentRecordDataControllerLwc.cls",
            "line": 5,
            "description": "To retrieve the records, we define an Apex method. Note that the method returns fields for accounts, but also their related owners names. As it's a read operation, we make it cacheable. A cacheable method will store the records in the LDS cache when possible, and read them from there in subsequent operations. "
        },
        {
            "title": "@wire cacheable Apex",
            "file": "force-app/main/default/lwc/listWithParentRecordData/listWithParentRecordData.js",
            "line": 31,
            "description": "As the method is cacheable, we can call it with @wire. The wire service will provide new values under certain circumstances, for example, when the records in the LDS cache change."
        },
        {
            "title": "Formatting Apex sObjects",
            "file": "force-app/main/default/lwc/listWithParentRecordData/listWithParentRecordData.js",
            "line": 36,
            "description": "When an Apex method returns parent record fields, the result needs to be transformed into the format lightning-datatable expects. We do that by calling the formatApexSObjects function that we import at the top of the file."
        },
        {
            "title": "formatApexSObjects in apexUtils",
            "file": "force-app/main/default/lwc/apexUtils/apexUtils.js",
            "line": 36,
            "description": "We defined the formatApexSObjects function in this apexUtils module. Feel free to copy it!\nWe hope that you enjoyed Visualforce to LWC code tours. If you want more information about the app, don't forget to activate [In-App Guidance](https://help.salesforce.com/articleView?id=customhelp_lexguid.htm) in your org and take a look at the guided tours we've created."
        }
    ]
}
